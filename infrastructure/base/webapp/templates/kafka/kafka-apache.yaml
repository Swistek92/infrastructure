apiVersion: v1
kind: Service
metadata:
  name: mywebapp-kafka
  namespace: app
  labels:
    app: mywebapp-kafka
spec:
  type: ClusterIP
  selector:
    app: mywebapp-kafka
  ports:
  - name: kafka
    port: 9092
    targetPort: 9092
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mywebapp-kafka
  namespace: app
  labels:
    app: mywebapp-kafka
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mywebapp-kafka
  template:
    metadata:
      labels:
        app: mywebapp-kafka
    spec:
      imagePullSecrets:
        - name: dockerhub-cred
      containers:
      - name: kafka
        image: apache/kafka:latest
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 9092
        # Obraz apache/kafka domyślnie uruchamia single-node KRaft.
        # Dodajemy tylko prosty readiness/liveness po TCP.
        readinessProbe:
          tcpSocket: { port: 9092 }
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          tcpSocket: { port: 9092 }
          initialDelaySeconds: 20
          periodSeconds: 10
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        # Dla środowiska dev – ephemeral storage:
        volumeMounts:
          - name: data
            mountPath: /var/lib/kafka/data
      volumes:
        - name: data
          emptyDir: {}
